// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221211100614_create_DB")]
    partial class create_DB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.BankTypes.BankType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IBAN")
                        .IsUnique();

                    b.ToTable("BankType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IBAN = "SA3456789456123456789123",
                            Name = "البنك الاهلي السعودي"
                        },
                        new
                        {
                            Id = 2,
                            IBAN = "SA3456789456123456789188",
                            Name = "بنك الرياض"
                        });
                });

            modelBuilder.Entity("DomainLayer.DamageTypes.DamageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("DamageType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "مركبة"
                        },
                        new
                        {
                            Id = 2,
                            Name = "افراد"
                        },
                        new
                        {
                            Id = 3,
                            Name = "اخري"
                        });
                });

            modelBuilder.Entity("DomainLayer.Entities.Data.DataPersons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BankTypesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DamageDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DamageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Iqama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankTypesId");

                    b.HasIndex("DamageTypeId");

                    b.ToTable("DataPersons");
                });

            modelBuilder.Entity("DomainLayer.Entities.Data.LocationData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaQuarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DataPersonsId")
                        .HasColumnType("int");

                    b.Property<int>("InsurranceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionsId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataPersonsId");

                    b.HasIndex("RegionsId");

                    b.ToTable("LocationData");
                });

            modelBuilder.Entity("DomainLayer.Region.RegionsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RegionsEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "مكه المكرمة"
                        },
                        new
                        {
                            Id = 2,
                            Name = "المدينة المنوره"
                        });
                });

            modelBuilder.Entity("DomainLayer.Entities.Data.DataPersons", b =>
                {
                    b.HasOne("DomainLayer.BankTypes.BankType", "BankTypes")
                        .WithMany("dataPersons")
                        .HasForeignKey("BankTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.DamageTypes.DamageType", "DamageType")
                        .WithMany("DataPersons")
                        .HasForeignKey("DamageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankTypes");

                    b.Navigation("DamageType");
                });

            modelBuilder.Entity("DomainLayer.Entities.Data.LocationData", b =>
                {
                    b.HasOne("DomainLayer.Entities.Data.DataPersons", "DataPersons")
                        .WithMany()
                        .HasForeignKey("DataPersonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainLayer.Region.RegionsEntity", "Regions")
                        .WithMany("LocationDatas")
                        .HasForeignKey("RegionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataPersons");

                    b.Navigation("Regions");
                });

            modelBuilder.Entity("DomainLayer.BankTypes.BankType", b =>
                {
                    b.Navigation("dataPersons");
                });

            modelBuilder.Entity("DomainLayer.DamageTypes.DamageType", b =>
                {
                    b.Navigation("DataPersons");
                });

            modelBuilder.Entity("DomainLayer.Region.RegionsEntity", b =>
                {
                    b.Navigation("LocationDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
